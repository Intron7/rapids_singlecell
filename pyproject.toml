[build-system]
build-backend = "flit_core.buildapi"
requires = [
    "flit_core >=3.4,<4",
    "setuptools_scm",
    "importlib_metadata>=0.7; python_version < '3.10'",
]

[project]
name = "rapids_singlecell"
description = "running single cell analysis on Nvidia GPUs"
requires-python = ">=3.8"
license = {file = "LICENSE"}
authors = [{name = "Severin Dicks"}]
readme = {file = "README.md", content-type="text/markdown"}
dynamic = ["version"]

dependencies = [
    "anndata>=0.7.4",
    "numpy>=1.17.0",
    "decoupler>=1.3.2",
    "scipy>=1.4",
    "pandas>=1.0",
    "natsort",
    "scikit-misc>=0.1.3",
    "matplotlib>=3.4",
    "seaborn",
    "tqdm",
    "statsmodels>=0.12.0",
]

[project.optional-dependencies]
rapids = ["cudf-cu11", "cuml-cu11", "cugraph-cu11"]
doc = [
    "sphinx>=4.5.0",
    "sphinx-copybutton",
    "nbsphinx>=0.8.12",
    "myst-nb",
    "scanpydoc[typehints,theme]>=0.9.4",
    "readthedocs-sphinx-ext",
]
test = [
    "pytest",
    "scanpy",
    "omnipath"
]

[project.urls]
Documentation = "https://rapids-singlecell.readthedocs.io"
Source = "https://github.com/scverse/rapids_singlecell"

[tool.black]
line-length = 88
target-version = ['py38']
include = '^rapids_singlecell/.*\.py$'

[tool.ruff]
src = ["rapids_singlecell"]
line-length = 88
select = [
    "F",  # Errors detected by Pyflakes
    "E",  # Error detected by Pycodestyle
    "W",  # Warning detected by Pycodestyle
    "I",  # isort
    "D",  # pydocstyle
    "B",  # flake8-bugbear
    "TID",  # flake8-tidy-imports
    "C4",  # flake8-comprehensions
    "BLE",  # flake8-blind-except
    "UP",  # pyupgrade
    "RUF100",  # Report unused noqa directives
]
ignore = [
    # line too long -> we accept long comment lines; black gets rid of long code lines
    "E501",
    # Do not assign a lambda expression, use a def -> lambda expression assignments are convenient
    "E731",
    # allow I, O, l as variable names -> I is the identity matrix
    "E741",
    # Missing docstring in public package
    "D104",
    # Missing docstring in public module
    "D100",
    # Missing docstring in __init__
    "D107",
    # Errors from function calls in argument defaults. These are fine when the result is immutable.
    "B008",
    # __magic__ methods are are often self-explanatory, allow missing docstrings
    "D105",
    # first line should end with a period [Bug: doesn't work with single-line docstrings]
    "D400",
    # First line should be in imperative mood; try rephrasing
    "D401",
    ## Disable one in each pair of mutually incompatible rules
    # We don't want a blank line before a class docstring
    "D203",
    # We want docstrings to start immediately after the opening triple quote
    "D213",
]

[tool.ruff.pydocstyle]
convention = "numpy"

[tool.ruff.per-file-ignores]
"docs/*" = ["I"]
"tests/*" = ["D"]
"*/__init__.py" = ["F401"]

[tool.flit.sdist]
exclude = [
    "rapids_singlecell/tests",
]
